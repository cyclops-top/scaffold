[{"name":"abstract class BindingFragment<VB : ViewBinding>(val bindingCreator: (LayoutInflater, ViewGroup?, Boolean) -> VB) : Fragment","description":"scaffold.app.BindingFragment","location":"scaffold/scaffold.app/-binding-fragment/index.html","searchKeys":["BindingFragment","abstract class BindingFragment<VB : ViewBinding>(val bindingCreator: (LayoutInflater, ViewGroup?, Boolean) -> VB) : Fragment","scaffold.app.BindingFragment"]},{"name":"abstract fun delete(ids: List<K>)","description":"scaffold.paging.MutableDataEventsFlow.delete","location":"scaffold/scaffold.paging/-mutable-data-events-flow/delete.html","searchKeys":["delete","abstract fun delete(ids: List<K>)","scaffold.paging.MutableDataEventsFlow.delete"]},{"name":"abstract fun insert(value: T, transform: (before: T?, after: T?) -> Boolean)","description":"scaffold.paging.MutableDataEventsFlow.insert","location":"scaffold/scaffold.paging/-mutable-data-events-flow/insert.html","searchKeys":["insert","abstract fun insert(value: T, transform: (before: T?, after: T?) -> Boolean)","scaffold.paging.MutableDataEventsFlow.insert"]},{"name":"abstract fun register()","description":"scaffold.permission.PermissionDispatchersHost.register","location":"scaffold/scaffold.permission/-permission-dispatchers-host/register.html","searchKeys":["register","abstract fun register()","scaffold.permission.PermissionDispatchersHost.register"]},{"name":"abstract fun setResult(key: String, result: Any?)","description":"scaffold.navigation.ResultDispatchers.setResult","location":"scaffold/scaffold.navigation/-result-dispatchers/set-result.html","searchKeys":["setResult","abstract fun setResult(key: String, result: Any?)","scaffold.navigation.ResultDispatchers.setResult"]},{"name":"abstract fun setResult(result: T?)","description":"scaffold.navigation.ResultSupporter.setResult","location":"scaffold/scaffold.navigation/-result-supporter/set-result.html","searchKeys":["setResult","abstract fun setResult(result: T?)","scaffold.navigation.ResultSupporter.setResult"]},{"name":"abstract fun update(filter: (T) -> Boolean, transform: (T) -> T)","description":"scaffold.paging.MutableDataEventsFlow.update","location":"scaffold/scaffold.paging/-mutable-data-events-flow/update.html","searchKeys":["update","abstract fun update(filter: (T) -> Boolean, transform: (T) -> T)","scaffold.paging.MutableDataEventsFlow.update"]},{"name":"abstract suspend fun <T> awaitResult(key: String): T?","description":"scaffold.navigation.ResultDispatchers.awaitResult","location":"scaffold/scaffold.navigation/-result-dispatchers/await-result.html","searchKeys":["awaitResult","abstract suspend fun <T> awaitResult(key: String): T?","scaffold.navigation.ResultDispatchers.awaitResult"]},{"name":"abstract suspend fun requestPermission(permissions: List<String>): Map<String, PermissionResult>","description":"scaffold.permission.PermissionDispatchers.requestPermission","location":"scaffold/scaffold.permission/-permission-dispatchers/request-permission.html","searchKeys":["requestPermission","abstract suspend fun requestPermission(permissions: List<String>): Map<String, PermissionResult>","scaffold.permission.PermissionDispatchers.requestPermission"]},{"name":"abstract val keySelector: T.() -> K","description":"scaffold.paging.DataEventsFlow.keySelector","location":"scaffold/scaffold.paging/-data-events-flow/key-selector.html","searchKeys":["keySelector","abstract val keySelector: T.() -> K","scaffold.paging.DataEventsFlow.keySelector"]},{"name":"class Delete<K : Any, T : Any>(val ids: Set<K>) : DataEvent<K, T> ","description":"scaffold.paging.DataEvent.Delete","location":"scaffold/scaffold.paging/-data-event/-delete/index.html","searchKeys":["Delete","class Delete<K : Any, T : Any>(val ids: Set<K>) : DataEvent<K, T> ","scaffold.paging.DataEvent.Delete"]},{"name":"class Insert<K : Any, T : Any>(val value: T, val transform: (before: T?, after: T?) -> Boolean) : DataEvent<K, T> ","description":"scaffold.paging.DataEvent.Insert","location":"scaffold/scaffold.paging/-data-event/-insert/index.html","searchKeys":["Insert","class Insert<K : Any, T : Any>(val value: T, val transform: (before: T?, after: T?) -> Boolean) : DataEvent<K, T> ","scaffold.paging.DataEvent.Insert"]},{"name":"class Update<K : Any, T : Any>(val filter: (T) -> Boolean, val transform: (T) -> T) : DataEvent<K, T> ","description":"scaffold.paging.DataEvent.Update","location":"scaffold/scaffold.paging/-data-event/-update/index.html","searchKeys":["Update","class Update<K : Any, T : Any>(val filter: (T) -> Boolean, val transform: (T) -> T) : DataEvent<K, T> ","scaffold.paging.DataEvent.Update"]},{"name":"const val PermissionKey: String","description":"scaffold.navigation.GuardNavController.Companion.PermissionKey","location":"scaffold/scaffold.navigation/-guard-nav-controller/-companion/-permission-key.html","searchKeys":["PermissionKey","const val PermissionKey: String","scaffold.navigation.GuardNavController.Companion.PermissionKey"]},{"name":"const val RequestKey: String","description":"scaffold.navigation.ResultSupporter.Companion.RequestKey","location":"scaffold/scaffold.navigation/-result-supporter/-companion/-request-key.html","searchKeys":["RequestKey","const val RequestKey: String","scaffold.navigation.ResultSupporter.Companion.RequestKey"]},{"name":"constructor(bindingCreator: (LayoutInflater, ViewGroup?, Boolean) -> VB)","description":"scaffold.app.BindingFragment.BindingFragment","location":"scaffold/scaffold.app/-binding-fragment/-binding-fragment.html","searchKeys":["BindingFragment","constructor(bindingCreator: (LayoutInflater, ViewGroup?, Boolean) -> VB)","scaffold.app.BindingFragment.BindingFragment"]},{"name":"constructor(filter: (T) -> Boolean, transform: (T) -> T)","description":"scaffold.paging.DataEvent.Update.Update","location":"scaffold/scaffold.paging/-data-event/-update/-update.html","searchKeys":["Update","constructor(filter: (T) -> Boolean, transform: (T) -> T)","scaffold.paging.DataEvent.Update.Update"]},{"name":"constructor(hour: Int, minute: Int)","description":"scaffold.pickers.Time.Time","location":"scaffold/scaffold.pickers/-time/-time.html","searchKeys":["Time","constructor(hour: Int, minute: Int)","scaffold.pickers.Time.Time"]},{"name":"constructor(ids: Set<K>)","description":"scaffold.paging.DataEvent.Delete.Delete","location":"scaffold/scaffold.paging/-data-event/-delete/-delete.html","searchKeys":["Delete","constructor(ids: Set<K>)","scaffold.paging.DataEvent.Delete.Delete"]},{"name":"constructor(navController: NavController)","description":"scaffold.navigation.GuardNavController.GuardNavController","location":"scaffold/scaffold.navigation/-guard-nav-controller/-guard-nav-controller.html","searchKeys":["GuardNavController","constructor(navController: NavController)","scaffold.navigation.GuardNavController.GuardNavController"]},{"name":"constructor(shouldShowRationale: Boolean)","description":"scaffold.permission.PermissionResult.Denied.Denied","location":"scaffold/scaffold.permission/-permission-result/-denied/-denied.html","searchKeys":["Denied","constructor(shouldShowRationale: Boolean)","scaffold.permission.PermissionResult.Denied.Denied"]},{"name":"constructor(value: T, transform: (before: T?, after: T?) -> Boolean)","description":"scaffold.paging.DataEvent.Insert.Insert","location":"scaffold/scaffold.paging/-data-event/-insert/-insert.html","searchKeys":["Insert","constructor(value: T, transform: (before: T?, after: T?) -> Boolean)","scaffold.paging.DataEvent.Insert.Insert"]},{"name":"data class Denied(val shouldShowRationale: Boolean) : PermissionResult","description":"scaffold.permission.PermissionResult.Denied","location":"scaffold/scaffold.permission/-permission-result/-denied/index.html","searchKeys":["Denied","data class Denied(val shouldShowRationale: Boolean) : PermissionResult","scaffold.permission.PermissionResult.Denied"]},{"name":"fun <K : Any, T : Any> DataEvent<K, T>.patchTo(data: PagingData<T>, keySelector: T.() -> K): PagingData<T>","description":"scaffold.paging.patchTo","location":"scaffold/scaffold.paging/patch-to.html","searchKeys":["patchTo","fun <K : Any, T : Any> DataEvent<K, T>.patchTo(data: PagingData<T>, keySelector: T.() -> K): PagingData<T>","scaffold.paging.patchTo"]},{"name":"fun <K : Any, T : Any> Flow<PagingData<T>>.patch(eventsFlow: DataEventsFlow<K, T>): Flow<PagingData<T>>","description":"scaffold.paging.patch","location":"scaffold/scaffold.paging/patch.html","searchKeys":["patch","fun <K : Any, T : Any> Flow<PagingData<T>>.patch(eventsFlow: DataEventsFlow<K, T>): Flow<PagingData<T>>","scaffold.paging.patch"]},{"name":"fun <K : Any, T : Any> Flow<T>.patch(eventsFlow: Flow<DataEvent<K, T>>): Flow<T>","description":"scaffold.paging.patch","location":"scaffold/scaffold.paging/patch.html","searchKeys":["patch","fun <K : Any, T : Any> Flow<T>.patch(eventsFlow: Flow<DataEvent<K, T>>): Flow<T>","scaffold.paging.patch"]},{"name":"fun <K : Any, T : Any> Flow<T?>.patch(eventsFlow: Flow<DataEvent<K, T>>): Flow<T>","description":"scaffold.paging.patch","location":"scaffold/scaffold.paging/patch.html","searchKeys":["patch","fun <K : Any, T : Any> Flow<T?>.patch(eventsFlow: Flow<DataEvent<K, T>>): Flow<T>","scaffold.paging.patch"]},{"name":"fun <K : Any, T : Any> MutableDataEventsFlow<K, T>.asDataEventsFlow(): DataEventsFlow<K, T>","description":"scaffold.paging.asDataEventsFlow","location":"scaffold/scaffold.paging/as-data-events-flow.html","searchKeys":["asDataEventsFlow","fun <K : Any, T : Any> MutableDataEventsFlow<K, T>.asDataEventsFlow(): DataEventsFlow<K, T>","scaffold.paging.asDataEventsFlow"]},{"name":"fun <K : Any, T : Any> MutableDataEventsFlow<K, T>.update(key: K, transform: (T) -> T)","description":"scaffold.paging.update","location":"scaffold/scaffold.paging/update.html","searchKeys":["update","fun <K : Any, T : Any> MutableDataEventsFlow<K, T>.update(key: K, transform: (T) -> T)","scaffold.paging.update"]},{"name":"fun <K : Any, T : Any> MutableDataEventsFlow<K, T>.update(value: T)","description":"scaffold.paging.update","location":"scaffold/scaffold.paging/update.html","searchKeys":["update","fun <K : Any, T : Any> MutableDataEventsFlow<K, T>.update(value: T)","scaffold.paging.update"]},{"name":"fun <T : Any> Fragment.registerResultSupporter(): ResultSupporter<T>","description":"scaffold.navigation.registerResultSupporter","location":"scaffold/scaffold.navigation/register-result-supporter.html","searchKeys":["registerResultSupporter","fun <T : Any> Fragment.registerResultSupporter(): ResultSupporter<T>","scaffold.navigation.registerResultSupporter"]},{"name":"fun Context.findPermissionDispatchers(): PermissionDispatchers","description":"scaffold.permission.findPermissionDispatchers","location":"scaffold/scaffold.permission/find-permission-dispatchers.html","searchKeys":["findPermissionDispatchers","fun Context.findPermissionDispatchers(): PermissionDispatchers","scaffold.permission.findPermissionDispatchers"]},{"name":"fun Context.findResultDispatchers(): ResultDispatchers","description":"scaffold.navigation.findResultDispatchers","location":"scaffold/scaffold.navigation/find-result-dispatchers.html","searchKeys":["findResultDispatchers","fun Context.findResultDispatchers(): ResultDispatchers","scaffold.navigation.findResultDispatchers"]},{"name":"fun Fragment.findGuardNavController(): GuardNavController","description":"scaffold.navigation.findGuardNavController","location":"scaffold/scaffold.navigation/find-guard-nav-controller.html","searchKeys":["findGuardNavController","fun Fragment.findGuardNavController(): GuardNavController","scaffold.navigation.findGuardNavController"]},{"name":"fun component1(): Int","description":"scaffold.pickers.Time.component1","location":"scaffold/scaffold.pickers/-time/component1.html","searchKeys":["component1","fun component1(): Int","scaffold.pickers.Time.component1"]},{"name":"fun component2(): Int","description":"scaffold.pickers.Time.component2","location":"scaffold/scaffold.pickers/-time/component2.html","searchKeys":["component2","fun component2(): Int","scaffold.pickers.Time.component2"]},{"name":"fun navigate(deepLink: Uri, navOptions: NavOptions?, navigatorExtras: Navigator.Extras?)","description":"scaffold.navigation.GuardNavController.navigate","location":"scaffold/scaffold.navigation/-guard-nav-controller/navigate.html","searchKeys":["navigate","fun navigate(deepLink: Uri, navOptions: NavOptions?, navigatorExtras: Navigator.Extras?)","scaffold.navigation.GuardNavController.navigate"]},{"name":"fun navigate(directions: NavDirections)","description":"scaffold.navigation.GuardNavController.navigate","location":"scaffold/scaffold.navigation/-guard-nav-controller/navigate.html","searchKeys":["navigate","fun navigate(directions: NavDirections)","scaffold.navigation.GuardNavController.navigate"]},{"name":"fun navigate(directions: NavDirections, navOptions: NavOptions?)","description":"scaffold.navigation.GuardNavController.navigate","location":"scaffold/scaffold.navigation/-guard-nav-controller/navigate.html","searchKeys":["navigate","fun navigate(directions: NavDirections, navOptions: NavOptions?)","scaffold.navigation.GuardNavController.navigate"]},{"name":"fun navigate(directions: NavDirections, navigatorExtras: Navigator.Extras)","description":"scaffold.navigation.GuardNavController.navigate","location":"scaffold/scaffold.navigation/-guard-nav-controller/navigate.html","searchKeys":["navigate","fun navigate(directions: NavDirections, navigatorExtras: Navigator.Extras)","scaffold.navigation.GuardNavController.navigate"]},{"name":"fun navigate(request: NavDeepLinkRequest)","description":"scaffold.navigation.GuardNavController.navigate","location":"scaffold/scaffold.navigation/-guard-nav-controller/navigate.html","searchKeys":["navigate","fun navigate(request: NavDeepLinkRequest)","scaffold.navigation.GuardNavController.navigate"]},{"name":"fun navigate(request: NavDeepLinkRequest, navOptions: NavOptions?)","description":"scaffold.navigation.GuardNavController.navigate","location":"scaffold/scaffold.navigation/-guard-nav-controller/navigate.html","searchKeys":["navigate","fun navigate(request: NavDeepLinkRequest, navOptions: NavOptions?)","scaffold.navigation.GuardNavController.navigate"]},{"name":"fun navigate(request: NavDeepLinkRequest, navOptions: NavOptions?, navigatorExtras: Navigator.Extras?)","description":"scaffold.navigation.GuardNavController.navigate","location":"scaffold/scaffold.navigation/-guard-nav-controller/navigate.html","searchKeys":["navigate","fun navigate(request: NavDeepLinkRequest, navOptions: NavOptions?, navigatorExtras: Navigator.Extras?)","scaffold.navigation.GuardNavController.navigate"]},{"name":"fun navigate(resId: Int, args: Bundle? = null, navOptions: NavOptions? = null, navigatorExtras: Navigator.Extras? = null)","description":"scaffold.navigation.GuardNavController.navigate","location":"scaffold/scaffold.navigation/-guard-nav-controller/navigate.html","searchKeys":["navigate","fun navigate(resId: Int, args: Bundle? = null, navOptions: NavOptions? = null, navigatorExtras: Navigator.Extras? = null)","scaffold.navigation.GuardNavController.navigate"]},{"name":"interface DataEvent<K : Any, T : Any>","description":"scaffold.paging.DataEvent","location":"scaffold/scaffold.paging/-data-event/index.html","searchKeys":["DataEvent","interface DataEvent<K : Any, T : Any>","scaffold.paging.DataEvent"]},{"name":"interface DataEventsFlow<K : Any, T : Any> : Flow<DataEvent<K, T>> ","description":"scaffold.paging.DataEventsFlow","location":"scaffold/scaffold.paging/-data-events-flow/index.html","searchKeys":["DataEventsFlow","interface DataEventsFlow<K : Any, T : Any> : Flow<DataEvent<K, T>> ","scaffold.paging.DataEventsFlow"]},{"name":"interface DestinationScope","description":"scaffold.DestinationScope","location":"scaffold/scaffold/-destination-scope/index.html","searchKeys":["DestinationScope","interface DestinationScope","scaffold.DestinationScope"]},{"name":"interface MutableDataEventsFlow<K : Any, T : Any> : DataEventsFlow<K, T> ","description":"scaffold.paging.MutableDataEventsFlow","location":"scaffold/scaffold.paging/-mutable-data-events-flow/index.html","searchKeys":["MutableDataEventsFlow","interface MutableDataEventsFlow<K : Any, T : Any> : DataEventsFlow<K, T> ","scaffold.paging.MutableDataEventsFlow"]},{"name":"interface PermissionDispatchers","description":"scaffold.permission.PermissionDispatchers","location":"scaffold/scaffold.permission/-permission-dispatchers/index.html","searchKeys":["PermissionDispatchers","interface PermissionDispatchers","scaffold.permission.PermissionDispatchers"]},{"name":"interface PermissionDispatchersHost : PermissionDispatchers","description":"scaffold.permission.PermissionDispatchersHost","location":"scaffold/scaffold.permission/-permission-dispatchers-host/index.html","searchKeys":["PermissionDispatchersHost","interface PermissionDispatchersHost : PermissionDispatchers","scaffold.permission.PermissionDispatchersHost"]},{"name":"interface PermissionResult","description":"scaffold.permission.PermissionResult","location":"scaffold/scaffold.permission/-permission-result/index.html","searchKeys":["PermissionResult","interface PermissionResult","scaffold.permission.PermissionResult"]},{"name":"interface PickerScope","description":"scaffold.PickerScope","location":"scaffold/scaffold/-picker-scope/index.html","searchKeys":["PickerScope","interface PickerScope","scaffold.PickerScope"]},{"name":"interface ResultDispatchers","description":"scaffold.navigation.ResultDispatchers","location":"scaffold/scaffold.navigation/-result-dispatchers/index.html","searchKeys":["ResultDispatchers","interface ResultDispatchers","scaffold.navigation.ResultDispatchers"]},{"name":"interface ResultSupporter<T : Any>","description":"scaffold.navigation.ResultSupporter","location":"scaffold/scaffold.navigation/-result-supporter/index.html","searchKeys":["ResultSupporter","interface ResultSupporter<T : Any>","scaffold.navigation.ResultSupporter"]},{"name":"interface ToolBoxScope","description":"scaffold.ToolBoxScope","location":"scaffold/scaffold/-tool-box-scope/index.html","searchKeys":["ToolBoxScope","interface ToolBoxScope","scaffold.ToolBoxScope"]},{"name":"object Companion","description":"scaffold.navigation.GuardNavController.Companion","location":"scaffold/scaffold.navigation/-guard-nav-controller/-companion/index.html","searchKeys":["Companion","object Companion","scaffold.navigation.GuardNavController.Companion"]},{"name":"object Companion","description":"scaffold.navigation.ResultSupporter.Companion","location":"scaffold/scaffold.navigation/-result-supporter/-companion/index.html","searchKeys":["Companion","object Companion","scaffold.navigation.ResultSupporter.Companion"]},{"name":"object Companion","description":"scaffold.paging.MutableDataEventsFlow.Companion","location":"scaffold/scaffold.paging/-mutable-data-events-flow/-companion/index.html","searchKeys":["Companion","object Companion","scaffold.paging.MutableDataEventsFlow.Companion"]},{"name":"object Companion","description":"scaffold.permission.PermissionResult.Companion","location":"scaffold/scaffold.permission/-permission-result/-companion/index.html","searchKeys":["Companion","object Companion","scaffold.permission.PermissionResult.Companion"]},{"name":"object Granted : PermissionResult","description":"scaffold.permission.PermissionResult.Granted","location":"scaffold/scaffold.permission/-permission-result/-granted/index.html","searchKeys":["Granted","object Granted : PermissionResult","scaffold.permission.PermissionResult.Granted"]},{"name":"open fun Fragment.initResultCaller()","description":"scaffold.navigation.ResultSupporter.initResultCaller","location":"scaffold/scaffold.navigation/-result-supporter/init-result-caller.html","searchKeys":["initResultCaller","open fun Fragment.initResultCaller()","scaffold.navigation.ResultSupporter.initResultCaller"]},{"name":"open fun Fragment.isNeedResult(): Boolean","description":"scaffold.navigation.ResultSupporter.isNeedResult","location":"scaffold/scaffold.navigation/-result-supporter/is-need-result.html","searchKeys":["isNeedResult","open fun Fragment.isNeedResult(): Boolean","scaffold.navigation.ResultSupporter.isNeedResult"]},{"name":"open override fun onDestroyView()","description":"scaffold.app.BindingFragment.onDestroyView","location":"scaffold/scaffold.app/-binding-fragment/on-destroy-view.html","searchKeys":["onDestroyView","open override fun onDestroyView()","scaffold.app.BindingFragment.onDestroyView"]},{"name":"open override fun toString(): String","description":"scaffold.pickers.Time.toString","location":"scaffold/scaffold.pickers/-time/to-string.html","searchKeys":["toString","open override fun toString(): String","scaffold.pickers.Time.toString"]},{"name":"open val granted: Boolean","description":"scaffold.permission.PermissionResult.granted","location":"scaffold/scaffold.permission/-permission-result/granted.html","searchKeys":["granted","open val granted: Boolean","scaffold.permission.PermissionResult.granted"]},{"name":"operator fun <K : Any, T : Any> invoke(keySelector: T.() -> K, scope: CoroutineScope = CoroutineScope(Dispatchers.Default + SupervisorJob())): MutableDataEventsFlow<K, T>","description":"scaffold.paging.MutableDataEventsFlow.Companion.invoke","location":"scaffold/scaffold.paging/-mutable-data-events-flow/-companion/invoke.html","searchKeys":["invoke","operator fun <K : Any, T : Any> invoke(keySelector: T.() -> K, scope: CoroutineScope = CoroutineScope(Dispatchers.Default + SupervisorJob())): MutableDataEventsFlow<K, T>","scaffold.paging.MutableDataEventsFlow.Companion.invoke"]},{"name":"operator fun <T : Any> invoke(): ResultSupporter<T>","description":"scaffold.navigation.ResultSupporter.Companion.invoke","location":"scaffold/scaffold.navigation/-result-supporter/-companion/invoke.html","searchKeys":["invoke","operator fun <T : Any> invoke(): ResultSupporter<T>","scaffold.navigation.ResultSupporter.Companion.invoke"]},{"name":"override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View","description":"scaffold.app.BindingFragment.onCreateView","location":"scaffold/scaffold.app/-binding-fragment/on-create-view.html","searchKeys":["onCreateView","override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View","scaffold.app.BindingFragment.onCreateView"]},{"name":"suspend fun <T : Any> navigateForResult(deepLink: String, navOptions: NavOptions? = null, navigatorExtras: Navigator.Extras? = null): T?","description":"scaffold.navigation.GuardNavController.navigateForResult","location":"scaffold/scaffold.navigation/-guard-nav-controller/navigate-for-result.html","searchKeys":["navigateForResult","suspend fun <T : Any> navigateForResult(deepLink: String, navOptions: NavOptions? = null, navigatorExtras: Navigator.Extras? = null): T?","scaffold.navigation.GuardNavController.navigateForResult"]},{"name":"suspend fun <T : Any> navigateForResult(deepLink: Uri, navOptions: NavOptions? = null, navigatorExtras: Navigator.Extras? = null): T?","description":"scaffold.navigation.GuardNavController.navigateForResult","location":"scaffold/scaffold.navigation/-guard-nav-controller/navigate-for-result.html","searchKeys":["navigateForResult","suspend fun <T : Any> navigateForResult(deepLink: Uri, navOptions: NavOptions? = null, navigatorExtras: Navigator.Extras? = null): T?","scaffold.navigation.GuardNavController.navigateForResult"]},{"name":"suspend fun <T : Any> navigateForResult(resId: Int, args: Bundle = bundleOf(), navOptions: NavOptions? = null, navigatorExtras: Navigator.Extras? = null): T?","description":"scaffold.navigation.GuardNavController.navigateForResult","location":"scaffold/scaffold.navigation/-guard-nav-controller/navigate-for-result.html","searchKeys":["navigateForResult","suspend fun <T : Any> navigateForResult(resId: Int, args: Bundle = bundleOf(), navOptions: NavOptions? = null, navigatorExtras: Navigator.Extras? = null): T?","scaffold.navigation.GuardNavController.navigateForResult"]},{"name":"suspend fun PickerScope.date(block: MaterialDatePicker.Builder<Long>.() -> MaterialDatePicker.Builder<Long> = { this }): Long?","description":"scaffold.pickers.date","location":"scaffold/scaffold.pickers/date.html","searchKeys":["date","suspend fun PickerScope.date(block: MaterialDatePicker.Builder<Long>.() -> MaterialDatePicker.Builder<Long> = { this }): Long?","scaffold.pickers.date"]},{"name":"suspend fun PickerScope.dateRange(block: MaterialDatePicker.Builder<Pair<Long, Long>>.() -> MaterialDatePicker.Builder<Pair<Long, Long>> = { this }): LongRange?","description":"scaffold.pickers.dateRange","location":"scaffold/scaffold.pickers/date-range.html","searchKeys":["dateRange","suspend fun PickerScope.dateRange(block: MaterialDatePicker.Builder<Pair<Long, Long>>.() -> MaterialDatePicker.Builder<Pair<Long, Long>> = { this }): LongRange?","scaffold.pickers.dateRange"]},{"name":"suspend fun PickerScope.time(config: MaterialTimePicker.Builder.() -> MaterialTimePicker.Builder = { this }): Time?","description":"scaffold.pickers.time","location":"scaffold/scaffold.pickers/time.html","searchKeys":["time","suspend fun PickerScope.time(config: MaterialTimePicker.Builder.() -> MaterialTimePicker.Builder = { this }): Time?","scaffold.pickers.time"]},{"name":"suspend fun ToolBoxScope.permission(permission: String): PermissionResult","description":"scaffold.permission.permission","location":"scaffold/scaffold.permission/permission.html","searchKeys":["permission","suspend fun ToolBoxScope.permission(permission: String): PermissionResult","scaffold.permission.permission"]},{"name":"suspend fun ToolBoxScope.permissions(permissions: List<String>): Map<String, PermissionResult>","description":"scaffold.permission.permissions","location":"scaffold/scaffold.permission/permissions.html","searchKeys":["permissions","suspend fun ToolBoxScope.permissions(permissions: List<String>): Map<String, PermissionResult>","scaffold.permission.permissions"]},{"name":"val ToolBox: ToolBoxScope","description":"scaffold.ToolBox","location":"scaffold/scaffold/-tool-box.html","searchKeys":["ToolBox","val ToolBox: ToolBoxScope","scaffold.ToolBox"]},{"name":"val ToolBoxScope.Destinations: DestinationScope","description":"scaffold.Destinations","location":"scaffold/scaffold/-destinations.html","searchKeys":["Destinations","val ToolBoxScope.Destinations: DestinationScope","scaffold.Destinations"]},{"name":"val ToolBoxScope.Pickers: PickerScope","description":"scaffold.Pickers","location":"scaffold/scaffold/-pickers.html","searchKeys":["Pickers","val ToolBoxScope.Pickers: PickerScope","scaffold.Pickers"]},{"name":"val bindingCreator: (LayoutInflater, ViewGroup?, Boolean) -> VB","description":"scaffold.app.BindingFragment.bindingCreator","location":"scaffold/scaffold.app/-binding-fragment/binding-creator.html","searchKeys":["bindingCreator","val bindingCreator: (LayoutInflater, ViewGroup?, Boolean) -> VB","scaffold.app.BindingFragment.bindingCreator"]},{"name":"val filter: (T) -> Boolean","description":"scaffold.paging.DataEvent.Update.filter","location":"scaffold/scaffold.paging/-data-event/-update/filter.html","searchKeys":["filter","val filter: (T) -> Boolean","scaffold.paging.DataEvent.Update.filter"]},{"name":"val hour: Int","description":"scaffold.pickers.Time.hour","location":"scaffold/scaffold.pickers/-time/hour.html","searchKeys":["hour","val hour: Int","scaffold.pickers.Time.hour"]},{"name":"val ids: Set<K>","description":"scaffold.paging.DataEvent.Delete.ids","location":"scaffold/scaffold.paging/-data-event/-delete/ids.html","searchKeys":["ids","val ids: Set<K>","scaffold.paging.DataEvent.Delete.ids"]},{"name":"val minute: Int","description":"scaffold.pickers.Time.minute","location":"scaffold/scaffold.pickers/-time/minute.html","searchKeys":["minute","val minute: Int","scaffold.pickers.Time.minute"]},{"name":"val shouldShowRationale: Boolean","description":"scaffold.permission.PermissionResult.Denied.shouldShowRationale","location":"scaffold/scaffold.permission/-permission-result/-denied/should-show-rationale.html","searchKeys":["shouldShowRationale","val shouldShowRationale: Boolean","scaffold.permission.PermissionResult.Denied.shouldShowRationale"]},{"name":"val transform: (T) -> T","description":"scaffold.paging.DataEvent.Update.transform","location":"scaffold/scaffold.paging/-data-event/-update/transform.html","searchKeys":["transform","val transform: (T) -> T","scaffold.paging.DataEvent.Update.transform"]},{"name":"val transform: (before: T?, after: T?) -> Boolean","description":"scaffold.paging.DataEvent.Insert.transform","location":"scaffold/scaffold.paging/-data-event/-insert/transform.html","searchKeys":["transform","val transform: (before: T?, after: T?) -> Boolean","scaffold.paging.DataEvent.Insert.transform"]},{"name":"val value: T","description":"scaffold.paging.DataEvent.Insert.value","location":"scaffold/scaffold.paging/-data-event/-insert/value.html","searchKeys":["value","val value: T","scaffold.paging.DataEvent.Insert.value"]},{"name":"value class GuardNavController(navController: NavController)","description":"scaffold.navigation.GuardNavController","location":"scaffold/scaffold.navigation/-guard-nav-controller/index.html","searchKeys":["GuardNavController","value class GuardNavController(navController: NavController)","scaffold.navigation.GuardNavController"]},{"name":"value class Time","description":"scaffold.pickers.Time","location":"scaffold/scaffold.pickers/-time/index.html","searchKeys":["Time","value class Time","scaffold.pickers.Time"]}]